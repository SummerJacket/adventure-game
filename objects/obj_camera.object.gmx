<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_debug</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>big_shake = false
small_shake = false

INITIAL_VALUE = 10
big_shake_counter = INITIAL_VALUE
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>SMALL_SHAKE_VALUE = 10
BIG_SHAKE_VALUE = 24

// create a large shake when the player is hit
// the camera continues to shake for multiple steps
if (big_shake or big_shake_counter != INITIAL_VALUE) {
    big_shake = false
    big_shake_counter--
    if (big_shake_counter = 0) big_shake_counter = INITIAL_VALUE
    
    do shake_offset = irandom_range(-BIG_SHAKE_VALUE, BIG_SHAKE_VALUE)
    until (abs(shake_offset) &gt; BIG_SHAKE_VALUE / 2) // camera shake shouldn't be too small
}
// smaller shake when an enemy is hit
else if (small_shake) {
    small_shake = false
    
    do shake_offset = irandom_range(-SMALL_SHAKE_VALUE, SMALL_SHAKE_VALUE)
    until (abs(shake_offset) &gt; SMALL_SHAKE_VALUE / 2)
}
else shake_offset = 0

DISTANCE = 20
DIRECTION = obj_player.point_toward_mouse
x = obj_player.x + lengthdir_x(DISTANCE, DIRECTION)
y = obj_player.y + lengthdir_y(DISTANCE, DIRECTION) + shake_offset

// make sure that the view is within the room
HALF_VIEW_X = view_wview[0] / 2
HALF_VIEW_Y = view_hview[0] / 2
x = clamp(x, HALF_VIEW_X, room_width - HALF_VIEW_X)
y = clamp(y, HALF_VIEW_Y, room_height - HALF_VIEW_Y)

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
