<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_debug</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>follow_speed = view_hspeed[0]

shaking = 0
shake_counter = 0
shake_steps = 0
shake_strength = 0

distance = 80

focus = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!global.paused) {
    if (mouse_check_button_pressed(mb_right)) {
        focus = !focus
        with (obj_player) {
            if (other.focus) text_fx(x, y, "FOCUS ON")
            else text_fx(x, y, "FOCUS OFF")
        }
    }
    
    // camera shake
    if (shaking) {
        shake_counter++
        if (shake_counter &gt;= shake_steps) {
            shaking = false
            shake_counter = 0
        }
        shake_direction = irandom(360)
        x_shake = choose(-1, 1) * shake_strength
        y_shake = choose(-1, 1) * shake_strength
        x_shake = lengthdir_x(x_shake, shake_direction)
        y_shake = lengthdir_y(y_shake, shake_direction)
    }
    else {
        x_shake = 0
        y_shake = 0
    }
    
    // camera view
    if (focus) {
        closest = closest_enemy(obj_cursor)
        if (closest and can_focus()) {
            x_pos = (obj_player.x + closest.x) / 2
            y_pos = (obj_player.y + closest.y) / 2
        }
        else {
            x_pos = (obj_player.x + mouse_x) / 2
            y_pos = (obj_player.y + mouse_y) / 2
        }
    }
    else {
        player_direction = obj_player.direction_towards_mouse
        x_pos = obj_player.x + lengthdir_x(distance, player_direction)
        y_pos = obj_player.y + lengthdir_y(distance, player_direction)
    }
    x_pos += x_shake
    y_pos += y_shake
    move_towards_point(x_pos, y_pos, min(follow_speed, distance_to_point(x_pos, y_pos)))
    
    // make sure that the camera is within the room
    half_view_x = view_wview[0] / 2
    half_view_y = view_hview[0] / 2
    x = clamp(x, half_view_x, room_width - half_view_x)
    y = clamp(y, half_view_y, room_height - half_view_y)
}
else speed = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
