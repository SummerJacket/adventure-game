<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>menu_options = ds_list_create()
menu_command = ds_list_create()
menu_end = 0

padding = 50
position = 0

command = "CONTINUE"
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>ds_list_destroy(menu_options)
ds_list_destroy(menu_command)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>UP = keyboard_check_pressed(vk_up) or keyboard_check_pressed(ord("W")) or mouse_wheel_up()
DOWN = keyboard_check_pressed(vk_down) or keyboard_check_pressed(ord("S")) or mouse_wheel_down()
LEFT = keyboard_check(vk_left) or keyboard_check(ord("A"))
RIGHT = keyboard_check(vk_right) or keyboard_check(ord("D"))

SELECT = keyboard_check_pressed(vk_enter) or keyboard_check_pressed(vk_space)

input = DOWN - UP
vol_input = RIGHT - LEFT

command = ds_list_find_value(menu_command, position)
// user makes a selection
if (vol_input != 0) {
    switch (command) {
        case "SFX": set_vol(global.sfx, vol_input) break
        case "MUSIC": set_vol(global.music, vol_input) break
    }
}
if (SELECT) {
    switch (command) {
        case "SFX":
        case "MUSIC": break
        case "CONTINUE": global.paused = 0 break
        case "EXIT": game_end() break
        default:
            room_goto(command)
            obj_sound.new_room = 1
            break
    }
}

if (input != 0) audio_play_sound_on(global.sfx, sfx_menu_nav_4, 0, 0)
if (vol_input != 0) audio_play_sound_on(global.sfx, sfx_menu_nav_3, 0, 0)
position += input
if (position &lt; 0) position = menu_end
if (position &gt; menu_end) position = 0

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!instance_exists(obj_hud) or !obj_hud.hide) {
    draw_set_halign(fa_left)
    draw_set_valign(fa_middle)
    draw_set_colour(c_white)
    draw_set_font(fnt_kenvector_future)
    
    // menu title
    y_pos = y - 200
    if (global.game_over) draw_text(x, y_pos, "MISSION FAILED")
    else if (global.game_win) draw_text(x, y_pos, "MISSION COMPLETE")
    else if (global.paused) draw_text(x, y_pos, "PAUSED")
    
    for (i = 0; i &lt;= menu_end; i++) {
        if (i = position) draw_set_colour(c_white)
        else draw_set_colour(c_gray)
        draw_text(x, y + (i * padding), ds_list_find_value(menu_options, i))
    }
    
    switch (command) {
        case "SFX": vol_text = audio_emitter_get_gain(global.sfx) break
        case "MUSIC": vol_text = audio_emitter_get_gain(global.music) break
        default: vol_text = -1 break
    }
    vol_text *= 100
    if (vol_text &gt;= 0) {
        draw_set_halign(fa_right)
        draw_set_colour(c_white)
        draw_text(x + 800, y, "VOL: " + string(round(vol_text)))
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
