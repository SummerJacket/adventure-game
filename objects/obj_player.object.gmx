<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_blue_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>vx = 0
vy = 0
ax = 0
ay = 0

player_health = 5

can_shoot = 0

MAX_SPEED = 12
point_toward_mouse = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// user input
UP    = keyboard_check(ord("W"))
LEFT  = keyboard_check(ord("A"))
DOWN  = keyboard_check(ord("S"))
RIGHT = keyboard_check(ord("D"))

DASHING  = mouse_check_button(mb_left)
SHOOTING = mouse_check_button(mb_right)

// acceleration
ax = (RIGHT - LEFT)
ay = (DOWN - UP)

// friction (in space? what??)
FRICTION_STRENGTH = 10 // higher = weaker
vx -= sign(vx) / FRICTION_STRENGTH
vy -= sign(vy) / FRICTION_STRENGTH

// apply acceleration
vx += ax
vy += ay

// don't let the player move faster than MAX_SPEED (yes, air resistance in space...)
vx = clamp(vx, -MAX_SPEED, MAX_SPEED)
vy = clamp(vy, -MAX_SPEED, MAX_SPEED)

// apply velocity to position
x += vx
y += vy

// player is always within the room
x = clamp(x, 0, room_width)
y = clamp(y, 0, room_height)

// player faces the cursor
point_toward_mouse = point_direction(x, y, mouse_x, mouse_y)
image_angle = point_toward_mouse - 90

// shoot a lazer
can_shoot++
if (SHOOTING and can_shoot &gt; 4) {
    can_shoot = 0
    new_lazer = instance_create(x, y, obj_lazer_player)
    new_lazer.image_angle = image_angle
    new_lazer.direction = image_angle + 90
    audio_play_sound(sfx_lazer1, 0, false)
}
else if (!SHOOTING) {
    //TODO: HEALTH SYSTEM
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lazer_enemy">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with other instance_destroy()
global.damaged = true
player_health--
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
