<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_boss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_moving</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = room_width / 2
y = room_height / 2

hit_points = 800
max_hit_points = hit_points
can_shoot = 0
shoot_rate = 20
old_shoot_rate = shoot_rate
fire_mode = 0
angle[1] = -90
angle[2] = 0

speed = 0
event_inherited()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited()
if (can_move() and audio_is_playing(snd_boss)) {
    direction = point_direction(x, y, obj_player.x, obj_player.y)
    image_angle = direction + 90
    
    can_shoot++
    if (can_shoot &gt; shoot_rate) {
        can_shoot = 0
        switch (fire_mode) {
            case 0:
                for (i = -1; i &lt;= 1; i++) {
                    angle[0] = i * 60
                    m = instance_create(x, y, obj_missile_2)
                    m.direction = direction + angle[0]
                    m.image_angle = image_angle - 180 + angle[0]
                }
                audio_play_sound(sfx_shoot_2, 0, 0)
                fire_mode++
                break
            case 1:
                shoot_rate = 1
                angle[1] += 15
                m = instance_create(x, y, obj_missile_1)
                m.direction = direction + angle[1]
                m.image_angle = image_angle - 180 + angle[1]
                audio_play_sound(sfx_shoot_1, 0, 0)
                if (angle[1] &gt;= 90) {
                    angle[1] = -90
                    shoot_rate = 12
                    fire_mode++
                }
                break
            case 2:
                shoot_rate = 3
                angle[2] += 30
                ml = 600
                mx = obj_player.x + lengthdir_x(ml, angle[2])
                my = obj_player.y + lengthdir_y(ml, angle[2])
                m = instance_create(mx, my, obj_minion_2)
                m.direction = point_direction(m.x, m.y, obj_player.x, obj_player.y)
                if (angle[2] &gt;= 360) {
                    angle[2] = 0
                    shoot_rate = 12
                    fire_mode++
                }
                break
            case 3:
                ml = 800
                minion_num = 3
                for (i = 0; i &lt; minion_num; i++) {
                    angle[3] = i * (360 / minion_num)
                    mx = obj_player.x + lengthdir_x(ml, angle[3])
                    my = obj_player.y + lengthdir_y(ml, angle[3])
                    m = instance_create(mx, my, obj_minion_1)
                    m.direction = point_direction(m.x, m.y, obj_player.x, obj_player.y)
                }
                fire_mode++
                break
            default:
                num = 4
                shoot_rate = 12
                missile_num = 24
                for (i = 0; i &lt; missile_num; i++) {
                    angle[num] = i * (360 / missile_num)
                    m = instance_create(x, y, obj_missile_1)
                    m.direction = direction + angle[num]
                    m.image_angle = image_angle - 180 + angle[num]
                }
                audio_play_sound(sfx_shoot_1, 0, 0)
                fire_mode = 0
                break
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_lazer_player_parent">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>with (other) {
    add_score(irandom(4) + 1) // lol
    effect_create_above(ef_ring, x, y, 0, c_aqua)
    instance_destroy()
}

hit_points--
if (hit_points &lt;= 0) {
    global.game_win = 1
    global.paused = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
